### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1
  commentId: T:Microsoft.FSharp.Quotations.FSharpExpr`1
  id: FSharpExpr`1
  children:
  - Microsoft.FSharp.Quotations.FSharpExpr`1.Raw
  langs:
  - csharp
  name: FSharpExpr<T>
  nameWithType: FSharpExpr<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr<T>
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.Class]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      [Microsoft.FSharp.Core.CompiledName("FSharpExpr`1")]

      public class FSharpExpr<T> : Microsoft.FSharp.Quotations.FSharpExpr
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  - Microsoft.FSharp.Quotations.FSharpExpr
  implements: []
  inheritedMembers:
  - Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  - Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  - Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  - Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.ToString
  - Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  - Microsoft.FSharp.Quotations.FSharpExpr.Type
  - Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  - Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  - Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: Microsoft.FSharp.Core.ClassAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr`1.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1.Raw
  commentId: P:Microsoft.FSharp.Quotations.FSharpExpr`1.Raw
  id: Raw
  parent: Microsoft.FSharp.Quotations.FSharpExpr`1
  langs:
  - csharp
  name: Raw
  nameWithType: FSharpExpr<T>.Raw
  fullName: FSharpExpr<T>.Raw
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public Microsoft.FSharp.Quotations.FSharpExpr Raw { get; }
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: ''
  overload: Microsoft.FSharp.Quotations.FSharpExpr`1.Raw*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr`1.xml
references:
- uid: Microsoft.FSharp.Quotations.FSharpExpr
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr
  nameWithType: FSharpExpr
  fullName: Microsoft.FSharp.Quotations.FSharpExpr
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1.Raw
  parent: Microsoft.FSharp.Quotations.FSharpExpr`1
  isExternal: false
  name: Raw
  nameWithType: FSharpExpr<T>.Raw
  fullName: FSharpExpr<T>.Raw
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1.Raw*
  parent: Microsoft.FSharp.Quotations.FSharpExpr`1
  isExternal: false
  name: Raw
  nameWithType: FSharpExpr<T>.Raw
  fullName: FSharpExpr<T>.Raw
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr`1.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Equals(Object)
  nameWithType: FSharpExpr.Equals(Object)
  fullName: FSharpExpr.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetHashCode()
  nameWithType: FSharpExpr.GetHashCode()
  fullName: FSharpExpr.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ToString()
  nameWithType: FSharpExpr.ToString()
  fullName: FSharpExpr.ToString()
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressOf(FSharpExpr)
  nameWithType: FSharpExpr.AddressOf(FSharpExpr)
  fullName: FSharpExpr.AddressOf(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressSet(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Application(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Application(FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.Application(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  fullName: FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Call(MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Cast<T>(FSharpExpr)
  nameWithType: FSharpExpr.Cast<T>(FSharpExpr)
  fullName: FSharpExpr.Cast<T>(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Coerce(FSharpExpr, Type)
  nameWithType: FSharpExpr.Coerce(FSharpExpr, Type)
  fullName: FSharpExpr.Coerce(FSharpExpr, Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: CustomAttributes
  nameWithType: FSharpExpr.CustomAttributes
  fullName: FSharpExpr.CustomAttributes
- uid: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: DefaultValue(Type)
  nameWithType: FSharpExpr.DefaultValue(Type)
  fullName: FSharpExpr.DefaultValue(Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  nameWithType: FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  fullName: FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  nameWithType: FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  fullName: FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldGet(FSharpExpr, FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
  fullName: FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldGet(FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FieldInfo)
  fullName: FSharpExpr.FieldGet(FieldInfo)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldSet(FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
  fullName: FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  fullName: FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetFreeVars()
  nameWithType: FSharpExpr.GetFreeVars()
  fullName: FSharpExpr.GetFreeVars()
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GlobalVar<T>(String)
  nameWithType: FSharpExpr.GlobalVar<T>(String)
  fullName: FSharpExpr.GlobalVar<T>(String)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Lambda(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.Lambda(FSharpVar, FSharpExpr)
  fullName: FSharpExpr.Lambda(FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Let(FSharpVar, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  nameWithType: FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  fullName: FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewArray(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  nameWithType: FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  fullName: FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewRecord(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewTuple(FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
  fullName: FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  fullName: FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Quote(FSharpExpr)
  nameWithType: FSharpExpr.Quote(FSharpExpr)
  fullName: FSharpExpr.Quote(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteRaw(FSharpExpr)
  nameWithType: FSharpExpr.QuoteRaw(FSharpExpr)
  fullName: FSharpExpr.QuoteRaw(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteTyped(FSharpExpr)
  nameWithType: FSharpExpr.QuoteTyped(FSharpExpr)
  fullName: FSharpExpr.QuoteTyped(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: RegisterReflectedDefinitions(Assembly, String, Byte[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
  fullName: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  fullName: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Sequential(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  nameWithType: FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  fullName: FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ToString(Boolean)
  nameWithType: FSharpExpr.ToString(Boolean)
  fullName: FSharpExpr.ToString(Boolean)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryFinally(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryGetReflectedDefinition(MethodBase)
  nameWithType: FSharpExpr.TryGetReflectedDefinition(MethodBase)
  fullName: FSharpExpr.TryGetReflectedDefinition(MethodBase)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  fullName: FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TupleGet(FSharpExpr, Int32)
  nameWithType: FSharpExpr.TupleGet(FSharpExpr, Int32)
  fullName: FSharpExpr.TupleGet(FSharpExpr, Int32)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Type
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Type
  nameWithType: FSharpExpr.Type
  fullName: FSharpExpr.Type
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TypeTest(FSharpExpr, Type)
  nameWithType: FSharpExpr.TypeTest(FSharpExpr, Type)
  fullName: FSharpExpr.TypeTest(FSharpExpr, Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: UnionCaseTest(FSharpExpr, UnionCaseInfo)
  nameWithType: FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
  fullName: FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value(Object, Type)
  nameWithType: FSharpExpr.Value(Object, Type)
  fullName: FSharpExpr.Value(Object, Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value<T>(T)
  nameWithType: FSharpExpr.Value<T>(T)
  fullName: FSharpExpr.Value<T>(T)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName(Object, Type, String)
  nameWithType: FSharpExpr.ValueWithName(Object, Type, String)
  fullName: FSharpExpr.ValueWithName(Object, Type, String)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName<T>(T, String)
  nameWithType: FSharpExpr.ValueWithName<T>(T, String)
  fullName: FSharpExpr.ValueWithName<T>(T, String)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Var(FSharpVar)
  nameWithType: FSharpExpr.Var(FSharpVar)
  fullName: FSharpExpr.Var(FSharpVar)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: VarSet(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.VarSet(FSharpVar, FSharpExpr)
  fullName: FSharpExpr.VarSet(FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WhileLoop(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
  fullName: FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue(Object, Type, FSharpExpr)
  nameWithType: FSharpExpr.WithValue(Object, Type, FSharpExpr)
  fullName: FSharpExpr.WithValue(Object, Type, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue<T>(T, FSharpExpr<T>)
  nameWithType: FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
  fullName: FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
