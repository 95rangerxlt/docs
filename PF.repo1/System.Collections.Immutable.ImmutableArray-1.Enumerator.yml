### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator
  commentId: T:System.Collections.Immutable.ImmutableArray`1.Enumerator
  id: ImmutableArray`1.Enumerator
  children:
  - System.Collections.Immutable.ImmutableArray`1.Enumerator.Current
  - System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext
  langs:
  - csharp
  name: ImmutableArray<T>.Enumerator
  nameWithType: ImmutableArray<T>.Enumerator
  fullName: System.Collections.Immutable.ImmutableArray<T>.Enumerator
  type: Struct
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: "An array enumerator.  \n  \n [!INCLUDE[immutable_nuget_short](~/includes/immutable-nuget-short-md.md)]"
  syntax:
    content: public struct ImmutableArray<T>.Enumerator
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableArray`1+Enumerator.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.Current
  commentId: P:System.Collections.Immutable.ImmutableArray`1.Enumerator.Current
  id: Current
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  langs:
  - csharp
  name: Current
  nameWithType: ImmutableArray<T>.Enumerator.Current
  fullName: ImmutableArray<T>.Enumerator.Current
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the currently item.
  syntax:
    content: public T Current { get; }
    return:
      type: T
      description: The current item.
  overload: System.Collections.Immutable.ImmutableArray`1.Enumerator.Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableArray`1+Enumerator.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext
  commentId: M:System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ImmutableArray<T>.Enumerator.MoveNext()
  fullName: ImmutableArray<T>.Enumerator.MoveNext()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Advances to the next value in the array.
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if another item exists in the array; otherwise, `false`.'
  overload: System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableArray`1+Enumerator.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.Current
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  isExternal: false
  name: Current
  nameWithType: ImmutableArray<T>.Enumerator.Current
  fullName: ImmutableArray<T>.Enumerator.Current
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ImmutableArray<T>.Enumerator.MoveNext()
  fullName: ImmutableArray<T>.Enumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.Current*
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  isExternal: false
  name: Current
  nameWithType: ImmutableArray<T>.Enumerator.Current
  fullName: ImmutableArray<T>.Enumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableArray`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableArray`1.Enumerator.MoveNext*
  parent: System.Collections.Immutable.ImmutableArray`1.Enumerator
  isExternal: false
  name: MoveNext
  nameWithType: ImmutableArray<T>.Enumerator.MoveNext
  fullName: ImmutableArray<T>.Enumerator.MoveNext
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableArray`1+Enumerator.xml
