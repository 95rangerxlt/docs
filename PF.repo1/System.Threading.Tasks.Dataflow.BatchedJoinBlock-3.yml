### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  commentId: T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  id: BatchedJoinBlock`3
  children:
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  langs:
  - csharp
  name: BatchedJoinBlock<T1,T2,T3>
  nameWithType: BatchedJoinBlock<T1,T2,T3>
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1,T2,T3>
  type: Class
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Provides a dataflow block that batches a specified number of inputs of potentially differing types provided to one or more of its targets.
  remarks: >-
    > [!NOTE]

    >  The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow> namespace) is not distributed with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)]. To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](~/includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package.
  syntax:
    content: 'public sealed class BatchedJoinBlock<T1,T2,T3> : System.Threading.Tasks.Dataflow.IReceivableSourceBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>, System.Threading.Tasks.Dataflow.ISourceBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>'
    typeParameters:
    - id: T1
      description: Specifies the type of data accepted by the block's first target.
    - id: T2
      description: Specifies the type of data accepted by the block's second target.
    - id: T3
      description: Specifies the type of data accepted by the block's third target.
  inheritance:
  - System.Object
  implements:
  - System.Threading.Tasks.Dataflow.IReceivableSourceBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  - System.Threading.Tasks.Dataflow.ISourceBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: BatchedJoinBlock<T1,T2,T3>(Int32)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32)
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.BatchedJoinBlock`3"></xref> with the specified configuration.
  syntax:
    content: public BatchedJoinBlock (int batchSize);
    parameters:
    - id: batchSize
      type: System.Int32
      description: The number of items to group into a batch.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>batchSize</code> must be positive.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  id: '#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)'
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.BatchedJoinBlock`3"></xref> with the specified configuration.
  syntax:
    content: public BatchedJoinBlock (int batchSize, System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: batchSize
      type: System.Int32
      description: The number of items to group into a batch.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
      description: The options with which to configure this  <xref href="System.Threading.Tasks.Dataflow.BatchedJoinBlock`2"></xref>.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>batchSize</code> must be positive.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>dataflowBlockOptions</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  id: BatchSize
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: BatchSize
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchSize
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchSize
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets the size of the batches generated by this <xref href="System.Threading.Tasks.Dataflow.BatchedJoinBlock`3"></xref>.
  syntax:
    content: public int BatchSize { get; }
    return:
      type: System.Int32
      description: The batch size.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  id: Complete
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: Complete()
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Complete()
  fullName: BatchedJoinBlock<T1,T2,T3>.Complete()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Signals to the <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> that it should not accept nor produce any more messages nor consume any more postponed messages.
  remarks: After <xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%603.Complete%2A> has been called on a dataflow block, that block will complete, and its  <xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%603.Completion%2A> task will enter a final state after it has processed all previously available data. <xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%603.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the  <xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%603.Completion%2A> task may be used.
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  id: Completion
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: Completion
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Completion
  fullName: BatchedJoinBlock<T1,T2,T3>.Completion
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets a <xref href="System.Threading.Tasks.Task"></xref> that represents the asynchronous operation and completion of the dataflow block.
  remarks: A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages. The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed. It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics, it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request. If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: The task.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  id: LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
  fullName: BatchedJoinBlock<T1,T2,T3>.LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Links the  <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref> to the specified  <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> .
  syntax:
    content: public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: The  <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> to which to connect this source.
    - id: linkOptions
      type: System.Threading.Tasks.Dataflow.DataflowLinkOptions
      description: '`true` if the source should unlink from the target after successfully propagating a single message; `false` to remain connected even after a single message has been propagated.'
    return:
      type: System.IDisposable
      description: An IDisposable that, upon calling Dispose, will unlink the source from the target.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>target</code> is null (Nothing in Visual Basic) or  <code>linkOptions</code> is null (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  id: OutputCount
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: OutputCount
  nameWithType: BatchedJoinBlock<T1,T2,T3>.OutputCount
  fullName: BatchedJoinBlock<T1,T2,T3>.OutputCount
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets the number of output items available to be received from this block.
  syntax:
    content: public int OutputCount { get; }
    return:
      type: System.Int32
      description: The number of output items.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  id: Target1
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: Target1
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target1
  fullName: BatchedJoinBlock<T1,T2,T3>.Target1
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets a target that may be used to offer messages of the first type.
  syntax:
    content: public System.Threading.Tasks.Dataflow.ITargetBlock<T1> Target1 { get; }
    return:
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T1}
      description: The target.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  id: Target2
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: Target2
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target2
  fullName: BatchedJoinBlock<T1,T2,T3>.Target2
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets a target that may be used to offer messages of the second type.
  syntax:
    content: public System.Threading.Tasks.Dataflow.ITargetBlock<T2> Target2 { get; }
    return:
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T2}
      description: The target.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  commentId: P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  id: Target3
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: Target3
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target3
  fullName: BatchedJoinBlock<T1,T2,T3>.Target3
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets a target that may be used to offer messages of the third type.
  syntax:
    content: public System.Threading.Tasks.Dataflow.ITargetBlock<T3> Target3 { get; }
    return:
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T3}
      description: The target.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
  id: ToString
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: ToString()
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ToString()
  fullName: BatchedJoinBlock<T1,T2,T3>.ToString()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Returns a string that represents the formatted name of this  <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> instance.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that represents the formatted name of this  <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> instance.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  id: TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Attempts to synchronously receive an available output item from the <xref href="System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1"></xref>.
  remarks: "This method does not block waiting for the source to provide an item.  \n  \n It will return after checking for an element, whether or not an element was available."
  syntax:
    content: public bool TryReceive (Predicate<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> filter, out Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>> item);
    parameters:
    - id: filter
      type: System.Predicate{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: The predicate a value must successfully pass in order for it to be received.  <code>filter</code> may be `null` in which case all items will pass.
    - id: item
      type: System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}
      description: The item received from the source.
    return:
      type: System.Boolean
      description: '`true` if an item could be received; otherwise, `false`.'
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  id: TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Attempts to synchronously receive all available items from the <xref href="System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1"></xref>.
  remarks: "This method does not block waiting for the source to provide an item.  \n  \n It will return after checking for elements, whether or not an element was available."
  syntax:
    content: public bool TryReceiveAll (out System.Collections.Generic.IList<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: The items received from the source.
    return:
      type: System.Boolean
      description: '`true` if one or more items could be received; otherwise, `false`.'
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  id: System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: IDataflowBlock.Fault(Exception)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.IDataflowBlock.Fault(Exception)
  fullName: BatchedJoinBlock<T1,T2,T3>.IDataflowBlock.Fault(Exception)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Causes the <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> to complete in a  <xref href="System.Threading.Tasks.TaskStatus.Faulted"></xref> state.
  remarks: After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%603.Completion%2A> task will enter a final state. Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.
  syntax:
    content: void IDataflowBlock.Fault (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception"></xref> that caused the faulting.
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>exception</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock<System#Tuple<System#Collections#Generic#IList<T1>,System#Collections#Generic#IList<T2>,System#Collections#Generic#IList<T3>>>#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)
  id: System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>> ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> target, out bool messageConsumed);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: ''
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: ''
    - id: messageConsumed
      type: System.Boolean
      description: ''
    return:
      type: System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}
      description: ''
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock<System#Tuple<System#Collections#Generic#IList<T1>,System#Collections#Generic#IList<T2>,System#Collections#Generic#IList<T3>>>#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: void ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: ''
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: ''
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  commentId: M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock<System#Tuple<System#Collections#Generic#IList<T1>,System#Collections#Generic#IList<T2>,System#Collections#Generic#IList<T3>>>#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  langs:
  - csharp
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: bool ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: ''
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: BatchedJoinBlock<T1,T2,T3>(Int32)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32)
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>(Int32, GroupingDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: GroupingDataflowBlockOptions
  nameWithType: GroupingDataflowBlockOptions
  fullName: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: BatchSize
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchSize
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchSize
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Complete()
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Complete()
  fullName: BatchedJoinBlock<T1,T2,T3>.Complete()
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Completion
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Completion
  fullName: BatchedJoinBlock<T1,T2,T3>.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
  fullName: BatchedJoinBlock<T1,T2,T3>.LinkTo(ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, DataflowLinkOptions)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
  name: ITargetBlock<TInput>
  nameWithType: ITargetBlock<TInput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TInput>
- uid: System.Tuple`3
  name: Tuple<T1,T2,T3>
  nameWithType: Tuple<T1,T2,T3>
  fullName: System.Tuple<T1,T2,T3>
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  nameWithType: ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowLinkOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowLinkOptions
  nameWithType: DataflowLinkOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowLinkOptions
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: OutputCount
  nameWithType: BatchedJoinBlock<T1,T2,T3>.OutputCount
  fullName: BatchedJoinBlock<T1,T2,T3>.OutputCount
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target1
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target1
  fullName: BatchedJoinBlock<T1,T2,T3>.Target1
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{T1}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<T1>
  nameWithType: ITargetBlock<T1>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<T1>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target2
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target2
  fullName: BatchedJoinBlock<T1,T2,T3>.Target2
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{T2}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<T2>
  nameWithType: ITargetBlock<T2>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<T2>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target3
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target3
  fullName: BatchedJoinBlock<T1,T2,T3>.Target3
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{T3}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<T3>
  nameWithType: ITargetBlock<T3>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<T3>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: ToString()
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ToString()
  fullName: BatchedJoinBlock<T1,T2,T3>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceive(Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Tuple<IList<T1>,IList<T2>,IList<T3>>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Predicate{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  parent: System
  isExternal: false
  name: Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  nameWithType: Predicate<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  fullName: System.Predicate<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}
  parent: System
  isExternal: false
  name: Tuple<IList<T1>,IList<T2>,IList<T3>>
  nameWithType: Tuple<IList<T1>,IList<T2>,IList<T3>>
  fullName: System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll(IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
- uid: System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  nameWithType: IList<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  fullName: System.Collections.Generic.IList<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: IDataflowBlock.Fault(Exception)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.IDataflowBlock.Fault(Exception)
  fullName: BatchedJoinBlock<T1,T2,T3>.IDataflowBlock.Fault(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>, Boolean)
- uid: System.Threading.Tasks.Dataflow.DataflowMessageHeader
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowMessageHeader
  nameWithType: DataflowMessageHeader
  fullName: System.Threading.Tasks.Dataflow.DataflowMessageHeader
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
  fullName: BatchedJoinBlock<T1,T2,T3>.ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: BatchedJoinBlock<T1,T2,T3>
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchedJoinBlock<T1,T2,T3>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: BatchSize
  nameWithType: BatchedJoinBlock<T1,T2,T3>.BatchSize
  fullName: BatchedJoinBlock<T1,T2,T3>.BatchSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Complete
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Complete
  fullName: BatchedJoinBlock<T1,T2,T3>.Complete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Completion
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Completion
  fullName: BatchedJoinBlock<T1,T2,T3>.Completion
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: LinkTo
  nameWithType: BatchedJoinBlock<T1,T2,T3>.LinkTo
  fullName: BatchedJoinBlock<T1,T2,T3>.LinkTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: OutputCount
  nameWithType: BatchedJoinBlock<T1,T2,T3>.OutputCount
  fullName: BatchedJoinBlock<T1,T2,T3>.OutputCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target1
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target1
  fullName: BatchedJoinBlock<T1,T2,T3>.Target1
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target2
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target2
  fullName: BatchedJoinBlock<T1,T2,T3>.Target2
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: Target3
  nameWithType: BatchedJoinBlock<T1,T2,T3>.Target3
  fullName: BatchedJoinBlock<T1,T2,T3>.Target3
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: ToString
  nameWithType: BatchedJoinBlock<T1,T2,T3>.ToString
  fullName: BatchedJoinBlock<T1,T2,T3>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: TryReceive
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceive
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceive
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: TryReceiveAll
  nameWithType: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll
  fullName: BatchedJoinBlock<T1,T2,T3>.TryReceiveAll
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  nameWithType: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  fullName: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ConsumeMessage*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ConsumeMessage
  nameWithType: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ConsumeMessage
  fullName: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ConsumeMessage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReleaseReservation*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReleaseReservation
  nameWithType: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReleaseReservation
  fullName: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReleaseReservation
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1},System#Collections#Generic#IList{T2},System#Collections#Generic#IList{T3}}}#ReserveMessage*
  parent: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReserveMessage
  nameWithType: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReserveMessage
  fullName: BatchedJoinBlock<T1,T2,T3>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>.ReserveMessage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/BatchedJoinBlock`3.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  name: IReceivableSourceBlock<TOutput>
  nameWithType: IReceivableSourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: IReceivableSourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  nameWithType: IReceivableSourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
    name: IReceivableSourceBlock
    nameWithType: IReceivableSourceBlock
    fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  name: ISourceBlock<TOutput>
  nameWithType: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{System.Tuple{System.Collections.Generic.IList{T1},System.Collections.Generic.IList{T2},System.Collections.Generic.IList{T3}}}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  nameWithType: ISourceBlock<Tuple<IList<T1>,IList<T2>,IList<T3>>>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<System.Collections.Generic.IList<T1>,System.Collections.Generic.IList<T2>,System.Collections.Generic.IList<T3>>>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
