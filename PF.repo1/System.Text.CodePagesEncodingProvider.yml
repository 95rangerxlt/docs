### YamlMime:ManagedReference
items:
- uid: System.Text.CodePagesEncodingProvider
  commentId: T:System.Text.CodePagesEncodingProvider
  id: CodePagesEncodingProvider
  children:
  - System.Text.CodePagesEncodingProvider.Instance
  langs:
  - csharp
  name: CodePagesEncodingProvider
  nameWithType: CodePagesEncodingProvider
  fullName: System.Text.CodePagesEncodingProvider
  type: Class
  assemblies:
  - System.Text.Encoding.CodePages
  namespace: System.Text
  summary: Provides access to an encoding provider for code pages supported in the desktop .NET Framework but not in UWP apps.
  remarks: "> [!NOTE]\n>  The <xref:System.Text.CodePagesEncodingProvider> class is supported in the .NET Native implementation of .NET Core only.  \n  \n The .NET Framework for the Windows desktop supports a large set of Unicode and code page encodings. The Universal Windows platform and .NET Native, on the other hand, support only the following encodings:  \n  \n-   ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property.  \n  \n-   ISO-8859-1 (code page 28591).  \n  \n-   UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property.  \n  \n-   UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property.  \n  \n-   UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=fullName> property.  \n  \n-   UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=fullName> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=fullName> constructor with a `bigEndian` value of `true`.  \n  \n-   UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property.  \n  \n-   UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.  \n  \n Other than code page 20127, code page encodings are not supported.  \n  \n The <xref:System.Text.CodePagesEncodingProvider> class extends <xref:System.Text.EncodingProvider> to make these code pages available to .NET Native and Universal Windows Platform (UWP) apps. To use these additional code pages, you do the following:  \n  \n-   Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n-   Retrieve a <xref:System.Text.CodePagesEncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n-   Pass the <xref:System.Text.CodePagesEncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method.  \n  \n After an <xref:System.Text.EncodingProvider> object is registered, the encodings that it supports are available by calling the overloads of <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName>; you should not call the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> overloads."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public sealed class CodePagesEncodingProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/CodePagesEncodingProvider.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.CodePagesEncodingProvider.Instance
  commentId: P:System.Text.CodePagesEncodingProvider.Instance
  id: Instance
  parent: System.Text.CodePagesEncodingProvider
  langs:
  - csharp
  name: Instance
  nameWithType: CodePagesEncodingProvider.Instance
  fullName: CodePagesEncodingProvider.Instance
  type: Property
  assemblies:
  - System.Text.Encoding.CodePages
  namespace: System.Text
  summary: Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.
  remarks: "The <xref:System.Text.CodePagesEncodingProvider.Instance%2A> property returns an <xref:System.Text.EncodingProvider> object that makes encodings available to apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or a later version  and that otherwise are available only in the .NET Framework on the Windows desktop.  \n  \n The .NET Framework on the Windows desktop supports a large number of character encodings and code pages. You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method, which is available in the full .NET Framework on the Windows desktop. .NET Native for UWP apps, on the other hand, supports only the following encodings by default:  \n  \n-   ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property.  \n  \n-   ISO-8859-1 (code page 28591).  \n  \n-   UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property.  \n  \n-   UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property.  \n  \n-   UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=fullName> property.  \n  \n-   UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=fullName> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=fullName> constructor with a `bigEndian` value of `true`.  \n  \n-   UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property.  \n  \n-   UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.  \n  \n To retrieve an encoding that is present in the .NET Framework on the Windows desktop but not in UWP apps, you do the following:  \n  \n-   Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n-   Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n-   Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.  \n  \n-   Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding. The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> method to determine whether it can supply the requested encoding."
  syntax:
    content: public static System.Text.EncodingProvider Instance { get; }
    return:
      type: System.Text.EncodingProvider
      description: An encoding provider that allows access to encodings not supported on the current .NET Framework platform.
  overload: System.Text.CodePagesEncodingProvider.Instance*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/CodePagesEncodingProvider.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.CodePagesEncodingProvider.Instance
  parent: System.Text.CodePagesEncodingProvider
  isExternal: false
  name: Instance
  nameWithType: CodePagesEncodingProvider.Instance
  fullName: CodePagesEncodingProvider.Instance
- uid: System.Text.EncodingProvider
  parent: System.Text
  isExternal: false
  name: EncodingProvider
  nameWithType: EncodingProvider
  fullName: System.Text.EncodingProvider
- uid: System.Text.CodePagesEncodingProvider.Instance*
  parent: System.Text.CodePagesEncodingProvider
  isExternal: false
  name: Instance
  nameWithType: CodePagesEncodingProvider.Instance
  fullName: CodePagesEncodingProvider.Instance
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/CodePagesEncodingProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
