### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableStack
  commentId: T:System.Collections.Immutable.ImmutableStack
  id: ImmutableStack
  children:
  - System.Collections.Immutable.ImmutableStack.Create``1
  - System.Collections.Immutable.ImmutableStack.Create``1(``0)
  - System.Collections.Immutable.ImmutableStack.Create``1(``0[])
  - System.Collections.Immutable.ImmutableStack.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)
  langs:
  - csharp
  name: ImmutableStack
  nameWithType: ImmutableStack
  fullName: System.Collections.Immutable.ImmutableStack
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: "Provides a set of initialization methods for instances of the <xref href=\"System.Collections.Immutable.ImmutableStack`1\"></xref> class.  \n  \n [!INCLUDE[immutable_nuget_short](~/includes/immutable-nuget-short-md.md)]"
  syntax:
    content: public static class ImmutableStack
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableStack.Create``1
  commentId: M:System.Collections.Immutable.ImmutableStack.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableStack
  langs:
  - csharp
  name: Create<T>()
  nameWithType: ImmutableStack.Create<T>()
  fullName: ImmutableStack.Create<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable stack.
  syntax:
    content: public static System.Collections.Immutable.ImmutableStack<T> Create<T> ();
    parameters: []
    typeParameters:
    - id: T
      description: The type of items to be stored in the immutable stack.
    return:
      type: System.Collections.Immutable.ImmutableStack`1
      description: An empty immutable stack.
  overload: System.Collections.Immutable.ImmutableStack.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableStack.Create``1(``0)
  commentId: M:System.Collections.Immutable.ImmutableStack.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableStack
  langs:
  - csharp
  name: Create<T>(T)
  nameWithType: ImmutableStack.Create<T>(T)
  fullName: ImmutableStack.Create<T>(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable stack that contains the specified item.
  syntax:
    content: public static System.Collections.Immutable.ImmutableStack<T> Create<T> (T item);
    parameters:
    - id: item
      type: T
      description: The item to prepopulate the stack with.
    typeParameters:
    - id: T
      description: The type of items in the immutable stack.
    return:
      type: System.Collections.Immutable.ImmutableStack`1
      description: A new immutable collection that contains the specified item.
  overload: System.Collections.Immutable.ImmutableStack.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableStack.Create``1(``0[])
  commentId: M:System.Collections.Immutable.ImmutableStack.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableStack
  langs:
  - csharp
  name: Create<T>(T[])
  nameWithType: ImmutableStack.Create<T>(T[])
  fullName: ImmutableStack.Create<T>(T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable stack that contains the specified array of items.
  syntax:
    content: public static System.Collections.Immutable.ImmutableStack<T> Create<T> (T[] items);
    parameters:
    - id: items
      type: T[]
      description: An array that contains the items to prepopulate the stack with.
    typeParameters:
    - id: T
      description: The type of items in the immutable stack.
    return:
      type: System.Collections.Immutable.ImmutableStack`1
      description: A new immutable stack that contains the specified items.
  overload: System.Collections.Immutable.ImmutableStack.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableStack.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableStack.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableStack
  langs:
  - csharp
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableStack.CreateRange<T>(IEnumerable<T>)
  fullName: ImmutableStack.CreateRange<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable stack that contains the specified items.
  syntax:
    content: public static System.Collections.Immutable.ImmutableStack<T> CreateRange<T> (System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: The items to add to the stack before itâ€™s immutable.
    typeParameters:
    - id: T
      description: The type of items in the stack.
    return:
      type: System.Collections.Immutable.ImmutableStack`1
      description: An immutable stack that contains the specified items.
  overload: System.Collections.Immutable.ImmutableStack.CreateRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)
  commentId: M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)
  id: Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)
  parent: System.Collections.Immutable.ImmutableStack
  langs:
  - csharp
  name: Pop<T>(IImmutableStack<T>, T)
  nameWithType: ImmutableStack.Pop<T>(IImmutableStack<T>, T)
  fullName: ImmutableStack.Pop<T>(IImmutableStack<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the specified item from an immutable stack.
  syntax:
    content: public static System.Collections.Immutable.IImmutableStack<T> Pop<T> (this System.Collections.Immutable.IImmutableStack<T> stack, out T value);
    parameters:
    - id: stack
      type: System.Collections.Immutable.IImmutableStack`1
      description: The stack to modify.
    - id: value
      type: T
      description: The item to remove from the stack.
    typeParameters:
    - id: T
      description: The type of items contained in the stack.
    return:
      type: System.Collections.Immutable.IImmutableStack`1
      description: A stack; never `null`.
  overload: System.Collections.Immutable.ImmutableStack.Pop``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableStack.Create``1
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Create<T>()
  nameWithType: ImmutableStack.Create<T>()
  fullName: ImmutableStack.Create<T>()
- uid: System.Collections.Immutable.ImmutableStack`1
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableStack<T>
  nameWithType: ImmutableStack<T>
  fullName: System.Collections.Immutable.ImmutableStack<T>
- uid: System.Collections.Immutable.ImmutableStack.Create``1(``0)
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Create<T>(T)
  nameWithType: ImmutableStack.Create<T>(T)
  fullName: ImmutableStack.Create<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableStack.Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Create<T>(T[])
  nameWithType: ImmutableStack.Create<T>(T[])
  fullName: ImmutableStack.Create<T>(T[])
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Immutable.ImmutableStack.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableStack.CreateRange<T>(IEnumerable<T>)
  fullName: ImmutableStack.CreateRange<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Pop<T>(IImmutableStack<T>, T)
  nameWithType: ImmutableStack.Pop<T>(IImmutableStack<T>, T)
  fullName: ImmutableStack.Pop<T>(IImmutableStack<T>, T)
- uid: System.Collections.Immutable.IImmutableStack`1
  parent: System.Collections.Immutable
  isExternal: false
  name: IImmutableStack<T>
  nameWithType: IImmutableStack<T>
  fullName: System.Collections.Immutable.IImmutableStack<T>
- uid: System.Collections.Immutable.ImmutableStack.Create``1*
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Create<T>
  nameWithType: ImmutableStack.Create<T>
  fullName: ImmutableStack.Create<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
- uid: System.Collections.Immutable.ImmutableStack.CreateRange``1*
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: CreateRange<T>
  nameWithType: ImmutableStack.CreateRange<T>
  fullName: ImmutableStack.CreateRange<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
- uid: System.Collections.Immutable.ImmutableStack.Pop``1*
  parent: System.Collections.Immutable.ImmutableStack
  isExternal: false
  name: Pop<T>
  nameWithType: ImmutableStack.Pop<T>
  fullName: ImmutableStack.Pop<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableStack.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
