### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  commentId: T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  id: OptimizedClosures.FSharpFunc`5
  children:
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)
  langs:
  - csharp
  name: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  fullName: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AbstractClass]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      public abstract class OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult> : Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,Microsoft.FSharp.Core.FSharpFunc<T4,TResult>>>>
    typeParameters:
    - id: T1
      description: ''
    - id: T2
      description: ''
    - id: T3
      description: ''
    - id: T4
      description: ''
    - id: TResult
      description: ''
  inheritance:
  - System.Object
  - Microsoft.FSharp.Core.FSharpFunc`2
  implements: []
  inheritedMembers:
  - Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  - Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  - Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  - Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AbstractClassAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor
  commentId: M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor
  id: '#ctor'
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  langs:
  - csharp
  name: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
  type: Constructor
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public FSharpFunc ();
    parameters: []
  overload: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})
  commentId: M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})
  id: Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  langs:
  - csharp
  name: Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult> Adapt (Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,Microsoft.FSharp.Core.FSharpFunc<T4,TResult>>>> func);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,Microsoft.FSharp.Core.FSharpFunc{T4,TResult}}}}
      description: ''
    return:
      type: Microsoft.FSharp.Core.OptimizedClosures
      description: ''
  overload: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)
  commentId: M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)
  id: Invoke(`0)
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  langs:
  - csharp
  name: Invoke(T1)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,Microsoft.FSharp.Core.FSharpFunc<T4,TResult>>> Invoke (T1 t);
    parameters:
    - id: t
      type: T1
      description: ''
    return:
      type: Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,Microsoft.FSharp.Core.FSharpFunc{T4,TResult}}}
      description: ''
  overload: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)
  commentId: M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)
  id: Invoke(`0,`1,`2,`3)
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  langs:
  - csharp
  name: Invoke(T1, T2, T3, T4)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1, T2, T3, T4)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1, T2, T3, T4)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public abstract TResult Invoke (T1 arg1, T2 arg2, T3 arg3, T4 arg4);
    parameters:
    - id: arg1
      type: T1
      description: ''
    - id: arg2
      type: T2
      description: ''
    - id: arg3
      type: T3
      description: ''
    - id: arg4
      type: T4
      description: ''
    return:
      type: TResult
      description: ''
  overload: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
references:
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,Microsoft.FSharp.Core.FSharpFunc{T4,TResult}}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>
  nameWithType: FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,Microsoft.FSharp.Core.FSharpFunc<T4,TResult>>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T4
    name: T4
    nameWithType: T4
    fullName: T4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>()
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>>)
- uid: Microsoft.FSharp.Core.OptimizedClosures
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: OptimizedClosures
  nameWithType: OptimizedClosures
  fullName: Microsoft.FSharp.Core.OptimizedClosures+FSharpFunc<T1,T2,T3,T4,TResult>
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: Invoke(T1)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1)
- uid: Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,Microsoft.FSharp.Core.FSharpFunc{T4,TResult}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>
  nameWithType: FSharpFunc<T2,FSharpFunc<T3,FSharpFunc<T4,TResult>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,Microsoft.FSharp.Core.FSharpFunc<T4,TResult>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T4
    name: T4
    nameWithType: T4
    fullName: T4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: Invoke(T1, T2, T3, T4)
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1, T2, T3, T4)
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke(T1, T2, T3, T4)
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor*
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt*
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: Adapt
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Adapt
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke*
  parent: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  isExternal: false
  name: Invoke
  nameWithType: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke
  fullName: OptimizedClosures.FSharpFunc<T1,T2,T3,T4,TResult>.Invoke
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/OptimizedClosures+FSharpFunc`5.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: FromConverter(Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
  fullName: FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  fullName: FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  fullName: FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  fullName: FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  fullName: FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  fullName: FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  fullName: FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: ToConverter(FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
  fullName: FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
