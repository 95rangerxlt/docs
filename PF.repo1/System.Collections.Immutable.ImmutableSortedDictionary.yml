### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary
  id: ImmutableSortedDictionary
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  langs:
  - csharp
  name: ImmutableSortedDictionary
  nameWithType: ImmutableSortedDictionary
  fullName: System.Collections.Immutable.ImmutableSortedDictionary
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: "Provides a set of initialization methods for instances of the <xref href=\"System.Collections.Immutable.ImmutableSortedDictionary`2\"></xref> class.  \n  \n [!INCLUDE[immutable_nuget_short](~/includes/immutable-nuget-short-md.md)]"
  syntax:
    content: public static class ImmutableSortedDictionary
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  id: Create``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: Create<TKey,TValue>()
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>()
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Create<TKey,TValue> ();
    parameters: []
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An empty immutable sorted dictionary.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  id: Create``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: Create<TKey,TValue>(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>)
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary that uses the specified key comparer.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Create<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The implementation to use to determine the equality of keys in the dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An empty immutable sorted dictionary.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty immutable sorted dictionary that uses the specified key and value comparers.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Create<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The implementation to use to determine the equality of keys in the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: The implementation to use to determine the equality of values in the dictonary.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An empty immutable sorted dictionary.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.Create``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  id: CreateBuilder``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateBuilder<TKey,TValue>()
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>()
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Builder CreateBuilder<TKey,TValue> ();
    parameters: []
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
      description: The immutable collection builder.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateBuilder<TKey,TValue>(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>)
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Builder CreateBuilder<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
      description: The immutable collection builder.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Builder CreateBuilder<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: The value comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
      description: The immutable collection builder.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary that contains the specified items and uses the default comparer.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> CreateRange<TKey,TValue> (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The items to add to the sorted dictionary before it’s immutable.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the specified items.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary from the specified range of items with the specified key comparer.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> CreateRange<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The comparer implementation to use to evaluate keys for equality and sorting.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The items to add to the sorted dictionary.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: The new immutable sorted dictionary that contains the specified items and uses the specified key comparer.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary from the specified range of items with the specified key and value comparers.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> CreateRange<TKey,TValue> (System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The comparer implementation to use to compare keys for equality and sorting.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: The comparer implementation to use to compare values for equality and sorting.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The items to add to the sorted dictionary before it’s immutable.
    typeParameters:
    - id: TKey
      description: The type of keys stored in the dictionary.
    - id: TValue
      description: The type of values stored in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the specified items and uses the specified comparers.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TKey,TValue> (this System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The sequence of key/value pairs to enumerate.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TKey,TValue> (this System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> source, System.Collections.Generic.IComparer<TKey> keyComparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer to use when building the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TKey,TValue> (this System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> source, System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: The sequence of key/value pairs to enumerate.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer to use when building the immutable dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: The value comparer to use for the immutable dictionary.
    typeParameters:
    - id: TKey
      description: The type of the keys in the dictionary.
    - id: TValue
      description: The type of the values in the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the key/value pairs in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TSource,TKey,TValue> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TValue> elementSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{TSource,TValue}
      description: The function that will produce the value for the dictionary from each sequence element.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the items in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key comparer.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TSource,TKey,TValue> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TValue> elementSelector, System.Collections.Generic.IComparer<TKey> keyComparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{TSource,TValue}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable dictionary that contains the items in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  langs:
  - csharp
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.
  syntax:
    content: public static System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> ToImmutableSortedDictionary<TSource,TKey,TValue> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TValue> elementSelector, System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: The sequence to enumerate to generate the dictionary.
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: The function that will produce the key for the dictionary from each sequence element.
    - id: elementSelector
      type: System.Func{TSource,TValue}
      description: The function that will produce the value for the dictionary from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: The key comparer to use for the dictionary.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: The value comparer to use for the dictionary.
    typeParameters:
    - id: TSource
      description: The type of the elements in the sequence.
    - id: TKey
      description: The type of the keys in the resulting dictionary.
    - id: TValue
      description: The type of the values in the resulting dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable sorted dictionary that contains the items in the specified sequence.
  overload: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: Create<TKey,TValue>()
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>()
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: Create<TKey,TValue>(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>)
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>)
- uid: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IEqualityComparer{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TValue>
  nameWithType: IEqualityComparer<TValue>
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateBuilder<TKey,TValue>()
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>()
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>()
- uid: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>+Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    nameWithType: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateBuilder<TKey,TValue>(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>)
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<TKey,TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Collections.Generic.IEnumerable{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Func{TSource,TKey}
  parent: System
  isExternal: false
  name: Func<TSource,TKey>
  nameWithType: Func<TSource,TKey>
  fullName: System.Func<TSource,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TSource,TValue}
  parent: System
  isExternal: false
  name: Func<TSource,TValue>
  nameWithType: Func<TSource,TValue>
  fullName: System.Func<TSource,TValue>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2*
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: Create<TKey,TValue>
  nameWithType: ImmutableSortedDictionary.Create<TKey,TValue>
  fullName: ImmutableSortedDictionary.Create<TKey,TValue>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2*
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateBuilder<TKey,TValue>
  nameWithType: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>
  fullName: ImmutableSortedDictionary.CreateBuilder<TKey,TValue>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2*
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: CreateRange<TKey,TValue>
  nameWithType: ImmutableSortedDictionary.CreateRange<TKey,TValue>
  fullName: ImmutableSortedDictionary.CreateRange<TKey,TValue>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2*
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3*
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
