### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SafeEvpPKeyHandle
  commentId: T:System.Security.Cryptography.SafeEvpPKeyHandle
  id: SafeEvpPKeyHandle
  children:
  - System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)
  - System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle
  - System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid
  - System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeEvpPKeyHandle
  nameWithType: SafeEvpPKeyHandle
  fullName: System.Security.Cryptography.SafeEvpPKeyHandle
  type: Class
  assemblies:
  - System.Security.Cryptography.OpenSsl
  namespace: System.Security.Cryptography
  syntax:
    content: 'public sealed class SafeEvpPKeyHandle : System.Runtime.InteropServices.SafeHandle'
  inheritance:
  - System.Object
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Runtime.InteropServices.SafeHandle.Close
  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - System.Runtime.InteropServices.SafeHandle.Dispose
  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  - System.Runtime.InteropServices.SafeHandle.handle
  - System.Runtime.InteropServices.SafeHandle.IsClosed
  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)
  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)
  id: '#ctor(System.IntPtr,System.Boolean)'
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  langs:
  - csharp
  name: SafeEvpPKeyHandle(IntPtr, Boolean)
  nameWithType: SafeEvpPKeyHandle.SafeEvpPKeyHandle(IntPtr, Boolean)
  fullName: SafeEvpPKeyHandle.SafeEvpPKeyHandle(IntPtr, Boolean)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.OpenSsl
  namespace: System.Security.Cryptography
  syntax:
    content: public SafeEvpPKeyHandle (IntPtr handle, bool ownsHandle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: ''
    - id: ownsHandle
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.SafeEvpPKeyHandle.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle
  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle
  id: DuplicateHandle
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  langs:
  - csharp
  name: DuplicateHandle()
  nameWithType: SafeEvpPKeyHandle.DuplicateHandle()
  fullName: SafeEvpPKeyHandle.DuplicateHandle()
  type: Method
  assemblies:
  - System.Security.Cryptography.OpenSsl
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateHandle ();
    parameters: []
    return:
      type: System.Security.Cryptography.SafeEvpPKeyHandle
      description: ''
  overload: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid
  commentId: P:System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid
  id: IsInvalid
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeEvpPKeyHandle.IsInvalid
  fullName: SafeEvpPKeyHandle.IsInvalid
  type: Property
  assemblies:
  - System.Security.Cryptography.OpenSsl
  namespace: System.Security.Cryptography
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle
  commentId: M:System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle
  id: ReleaseHandle
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeEvpPKeyHandle.ReleaseHandle()
  fullName: SafeEvpPKeyHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Security.Cryptography.OpenSsl
  namespace: System.Security.Cryptography
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
references:
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.#ctor(System.IntPtr,System.Boolean)
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: SafeEvpPKeyHandle(IntPtr, Boolean)
  nameWithType: SafeEvpPKeyHandle.SafeEvpPKeyHandle(IntPtr, Boolean)
  fullName: SafeEvpPKeyHandle.SafeEvpPKeyHandle(IntPtr, Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: DuplicateHandle()
  nameWithType: SafeEvpPKeyHandle.DuplicateHandle()
  fullName: SafeEvpPKeyHandle.DuplicateHandle()
- uid: System.Security.Cryptography.SafeEvpPKeyHandle
  parent: System.Security.Cryptography
  isExternal: false
  name: SafeEvpPKeyHandle
  nameWithType: SafeEvpPKeyHandle
  fullName: System.Security.Cryptography.SafeEvpPKeyHandle
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: IsInvalid
  nameWithType: SafeEvpPKeyHandle.IsInvalid
  fullName: SafeEvpPKeyHandle.IsInvalid
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeEvpPKeyHandle.ReleaseHandle()
  fullName: SafeEvpPKeyHandle.ReleaseHandle()
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.#ctor*
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: SafeEvpPKeyHandle
  nameWithType: SafeEvpPKeyHandle.SafeEvpPKeyHandle
  fullName: SafeEvpPKeyHandle.SafeEvpPKeyHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.DuplicateHandle*
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: DuplicateHandle
  nameWithType: SafeEvpPKeyHandle.DuplicateHandle
  fullName: SafeEvpPKeyHandle.DuplicateHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.IsInvalid*
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: IsInvalid
  nameWithType: SafeEvpPKeyHandle.IsInvalid
  fullName: SafeEvpPKeyHandle.IsInvalid
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Security.Cryptography.SafeEvpPKeyHandle.ReleaseHandle*
  parent: System.Security.Cryptography.SafeEvpPKeyHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeEvpPKeyHandle.ReleaseHandle
  fullName: SafeEvpPKeyHandle.ReleaseHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SafeEvpPKeyHandle.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.InteropServices.SafeHandle.Close
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: Close()
  nameWithType: SafeHandle.Close()
  fullName: SafeHandle.Close()
- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: DangerousAddRef(Boolean)
  nameWithType: SafeHandle.DangerousAddRef(Boolean)
  fullName: SafeHandle.DangerousAddRef(Boolean)
- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: DangerousGetHandle()
  nameWithType: SafeHandle.DangerousGetHandle()
  fullName: SafeHandle.DangerousGetHandle()
- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: DangerousRelease()
  nameWithType: SafeHandle.DangerousRelease()
  fullName: SafeHandle.DangerousRelease()
- uid: System.Runtime.InteropServices.SafeHandle.Dispose
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: Dispose()
  nameWithType: SafeHandle.Dispose()
  fullName: SafeHandle.Dispose()
- uid: System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SafeHandle.Dispose(Boolean)
  fullName: SafeHandle.Dispose(Boolean)
- uid: System.Runtime.InteropServices.SafeHandle.handle
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: handle
  nameWithType: SafeHandle.handle
  fullName: SafeHandle.handle
- uid: System.Runtime.InteropServices.SafeHandle.IsClosed
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: IsClosed
  nameWithType: SafeHandle.IsClosed
  fullName: SafeHandle.IsClosed
- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: SetHandle(IntPtr)
  nameWithType: SafeHandle.SetHandle(IntPtr)
  fullName: SafeHandle.SetHandle(IntPtr)
- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  parent: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: SetHandleAsInvalid()
  nameWithType: SafeHandle.SetHandleAsInvalid()
  fullName: SafeHandle.SetHandleAsInvalid()
