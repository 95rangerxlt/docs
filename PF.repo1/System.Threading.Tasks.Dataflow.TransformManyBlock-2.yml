### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  commentId: T:System.Threading.Tasks.Dataflow.TransformManyBlock`2
  id: TransformManyBlock`2
  children:
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  langs:
  - csharp
  name: TransformManyBlock<TInput,TOutput>
  nameWithType: TransformManyBlock<TInput,TOutput>
  fullName: System.Threading.Tasks.Dataflow.TransformManyBlock<TInput,TOutput>
  type: Class
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Provides a dataflow block that invokes a provided <xref href="System.Func`2"></xref> delegate for every data element received.
  remarks: >-
    > [!NOTE]

    >  The TPL Dataflow Library (<xref:System.Threading.Tasks.Dataflow?displayProperty=fullName> namespace) is not distributed with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)]. To install the <xref:System.Threading.Tasks.Dataflow> namespace, open your project in [!INCLUDE[vs_dev11_long](~/includes/vs-dev11-long-md.md)], choose **Manage NuGet Packages** from the Project menu, and search online for the `Microsoft.Tpl.Dataflow` package.
  syntax:
    content: 'public sealed class TransformManyBlock<TInput,TOutput> : System.Threading.Tasks.Dataflow.IPropagatorBlock<TInput,TOutput>, System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput>, System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>, System.Threading.Tasks.Dataflow.ITargetBlock<TInput>'
    typeParameters:
    - id: TInput
      description: Specifies the type of data received and operated on by this <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
    - id: TOutput
      description: Specifies the type of data output by this <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
  inheritance:
  - System.Object
  implements:
  - System.Threading.Tasks.Dataflow.IPropagatorBlock{TInput,TOutput}
  - System.Threading.Tasks.Dataflow.IReceivableSourceBlock{TOutput}
  - System.Threading.Tasks.Dataflow.ISourceBlock{TOutput}
  - System.Threading.Tasks.Dataflow.ITargetBlock{TInput}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})
  id: '#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})'
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref> with the specified function.
  syntax:
    content: public TransformManyBlock (Func<TInput,System.Collections.Generic.IEnumerable<TOutput>> transform);
    parameters:
    - id: transform
      type: System.Func{TInput,System.Collections.Generic.IEnumerable{TOutput}}
      description: The function to invoke with each data element received. All of the data from the returned <xref href="System.Collections.Generic.IEnumerable`1"></xref> will be made available as output from this <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>transform</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})
  id: '#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})'
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref> with the specified function.
  syntax:
    content: public TransformManyBlock (Func<TInput,System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TOutput>>> transform);
    parameters:
    - id: transform
      type: System.Func{TInput,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{TOutput}}}
      description: The function to invoke with each data element received. All of the data asynchronously returned in the <xref href="System.Collections.Generic.IEnumerable`1"></xref> will be made available as output from this  <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>transform</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  id: '#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)'
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref> with the specified function and <xref href="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions"></xref>.
  syntax:
    content: public TransformManyBlock (Func<TInput,System.Collections.Generic.IEnumerable<TOutput>> transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: transform
      type: System.Func{TInput,System.Collections.Generic.IEnumerable{TOutput}}
      description: The function to invoke with each data element received. All of the data from the returned in the <xref href="System.Collections.Generic.IEnumerable`1"></xref> will be made available as output from this  <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
      description: The options with which to configure this <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transform</code> is `null`.  \n  \n -or-  \n  \n The <code>dataflowBlockOptions</code> is `null`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  id: '#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)'
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Initializes a new <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref> with the specified function and <xref href="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions"></xref>.
  syntax:
    content: public TransformManyBlock (Func<TInput,System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TOutput>>> transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: transform
      type: System.Func{TInput,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{TOutput}}}
      description: The function to invoke with each data element received. All of the data asynchronously returned in the <xref href="System.Collections.Generic.IEnumerable`1"></xref> will be made available as output from this  <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
      description: The options with which to configure this <xref href="System.Threading.Tasks.Dataflow.TransformManyBlock`2"></xref>.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transform</code> is `null`.  \n  \n -or-  \n  \n The <code>dataflowBlockOptions</code> is `null`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete
  id: Complete
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: Complete()
  nameWithType: TransformManyBlock<TInput,TOutput>.Complete()
  fullName: TransformManyBlock<TInput,TOutput>.Complete()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Signals to the <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> that it should not accept nor produce any more messages nor consume any more postponed messages.
  remarks: After <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task will enter a final state after it has processed all previously available data. <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task may be used.
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion
  commentId: P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion
  id: Completion
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: Completion
  nameWithType: TransformManyBlock<TInput,TOutput>.Completion
  fullName: TransformManyBlock<TInput,TOutput>.Completion
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets a <xref href="System.Threading.Tasks.Task"></xref> that represents the asynchronous operation and completion of the dataflow block.
  remarks: A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages. The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed. It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics. It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request. If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: The task.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount
  commentId: P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount
  id: InputCount
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: InputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.InputCount
  fullName: TransformManyBlock<TInput,TOutput>.InputCount
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets the number of input items waiting to be processed by this block.
  remarks: The <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.InputCount%2A> does not include any items currently being processed by the block or any items that have already been processed by the block.
  syntax:
    content: public int InputCount { get; }
    return:
      type: System.Int32
      description: The number of input items.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  id: LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  fullName: TransformManyBlock<TInput,TOutput>.LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Links the  <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref> to the specified  <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> .
  syntax:
    content: public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: The  <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> to which to connect this source.
    - id: linkOptions
      type: System.Threading.Tasks.Dataflow.DataflowLinkOptions
      description: A <xref href="System.Threading.Tasks.Dataflow.DataflowLinkOptions"></xref> instance that configures the link.
    return:
      type: System.IDisposable
      description: An IDisposable that, upon calling Dispose, will unlink the source from the target.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>target</code> is null (Nothing in Visual Basic) or  <code>linkOptions</code> is null (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount
  commentId: P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount
  id: OutputCount
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: OutputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.OutputCount
  fullName: TransformManyBlock<TInput,TOutput>.OutputCount
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Gets the number of output items available to be received from this block.
  syntax:
    content: public int OutputCount { get; }
    return:
      type: System.Int32
      description: The number of output items.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString
  id: ToString
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: ToString()
  nameWithType: TransformManyBlock<TInput,TOutput>.ToString()
  fullName: TransformManyBlock<TInput,TOutput>.ToString()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Returns a string that represents the formatted name of this  <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> instance.
  remarks: Inherited from  <xref:System.Object> . Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that represents the formatted name of this  <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> instance.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)
  id: TryReceive(System.Predicate{`1},`1@)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TryReceive(Predicate<TOutput>, TOutput)
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  fullName: TransformManyBlock<TInput,TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Attempts to synchronously receive an available output item from the <xref href="System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1"></xref>.
  remarks: "This method does not block waiting for the source to provide an item.  \n  \n It will return after checking for an element, whether or not an element was available."
  syntax:
    content: public bool TryReceive (Predicate<TOutput> filter, out TOutput item);
    parameters:
    - id: filter
      type: System.Predicate{TOutput}
      description: The predicate value must successfully pass in order for it to be received.  <code>filter</code> may be `null`, in which case all items will pass.
    - id: item
      type: TOutput
      description: The item received from the source.
    return:
      type: System.Boolean
      description: '`true` if an item could be received; otherwise, `false`.'
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)
  id: TryReceiveAll(System.Collections.Generic.IList{`1}@)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: TryReceiveAll(IList<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceiveAll(IList<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.TryReceiveAll(IList<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Attempts to synchronously receive all available items from the <xref href="System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1"></xref>.
  remarks: "This method does not block waiting for the source to provide an item.  \n  \n It will return after checking for elements, whether or not an element was available."
  syntax:
    content: public bool TryReceiveAll (out System.Collections.Generic.IList<TOutput> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IList{TOutput}
      description: The items received from the source.
    return:
      type: System.Boolean
      description: '`true` if one or more items could be received; otherwise, `false`.'
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  id: System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: IDataflowBlock.Fault(Exception)
  nameWithType: TransformManyBlock<TInput,TOutput>.IDataflowBlock.Fault(Exception)
  fullName: TransformManyBlock<TInput,TOutput>.IDataflowBlock.Fault(Exception)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Causes the <xref href="System.Threading.Tasks.Dataflow.IDataflowBlock"></xref> to complete in a  <xref href="System.Threading.Tasks.TaskStatus.Faulted"></xref> state.
  remarks: After <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602.Completion%2A> task will enter a final state. Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.
  syntax:
    content: void IDataflowBlock.Fault (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception"></xref> that caused the faulting.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>exception</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock<TOutput>#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)
  id: System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Called by a linked <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> to accept and consume a <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> previously offered by this <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref>.
  remarks: Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.
  syntax:
    content: TOutput ISourceBlock<TOutput>.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target, out bool messageConsumed);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: The <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> of the message being consumed.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: The <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> consuming the message.
    - id: messageConsumed
      type: System.Boolean
      description: '`true` if the message was successfully consumed; otherwise, `false`.'
    return:
      type: TOutput
      description: "The value of the consumed message. This may correspond to a different <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageHeader\"></xref> instance than was previously reserved and passed as the <code>messageHeader</code> to <xref href=\"System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)\"></xref>. The consuming <xref href=\"System.Threading.Tasks.Dataflow.ITargetBlock`1\"></xref> must use the returned value instead of the value passed as <code>messageValue</code> through OfferMessage <xref href=\"System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)\"></xref>  \n  \n If the message requested is not available, the return value will be `null`."
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>messageHeader</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>target</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock<TOutput>#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Called by a linked <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> to release a previously reserved <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> by this <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref>.
  remarks: Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.
  syntax:
    content: void ISourceBlock<TOutput>.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: The <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> of the reserved message being released.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: The <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> releasing the message it previously reserved.
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>messageHeader</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>target</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>target</code> did not have the message reserved.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock<TOutput>#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Called by a linked <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> to reserve a previously offered <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> by this  <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref>.
  remarks: "Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.  \n  \n If `true` is returned, the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message. Failure to do so may result in the source being unable to propagate any further messages to this or other targets.  \n  \n <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks. Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network."
  syntax:
    content: bool ISourceBlock<TOutput>.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: The <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> of the message being reserved.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: The <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref> reserving the message.
    return:
      type: System.Boolean
      description: '`true` if the message was successfully reserved; otherwise, `false`.'
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>messageHeader</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>target</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  commentId: M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock<TInput>#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  id: System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  langs:
  - csharp
  name: ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
  nameWithType: TransformManyBlock<TInput,TOutput>.ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
  fullName: TransformManyBlock<TInput,TOutput>.ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  summary: Offers a message to the <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref>, giving the target the opportunity to consume or postpone the message.
  syntax:
    content: System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock<TInput>.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock<TInput> source, bool consumeToAccept);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: A <xref href="System.Threading.Tasks.Dataflow.DataflowMessageHeader"></xref> instance that represents the header of the message being offered.
    - id: messageValue
      type: TInput
      description: The value of the message being offered.
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock{TInput}
      description: The <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1"></xref> offering the message. This may be `null`.
    - id: consumeToAccept
      type: System.Boolean
      description: '`true` if the target must call <xref href="System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)"></xref> synchronously during the call to <xref href="System.Threading.Tasks.Dataflow.ITargetBlock`1"></xref>, prior to returning <xref href="System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted"></xref>, in order to consume the message.'
    return:
      type: System.Threading.Tasks.Dataflow.DataflowMessageStatus
      description: "The status of the offered message. If the message was accepted by the target, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted\"></xref> is returned, and the source should no longer use the offered message, as it is now owned by the target. If the message was postponed by the target, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed\"></xref> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  \n  \n If the target would have otherwise postponed but source was `null`, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined\"></xref> is instead returned.  \n  \n If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable\"></xref> is returned.  \n  \n If the target chose not to accept the message, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined\"></xref> is returned. If the target chose not to accept the message and will never accept another message from this source, <xref href=\"System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently\"></xref> is returned."
  overload: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>messageHeader</code> is not valid.  \n  \n -or-  \n  \n <code>consumeToAccept</code> may only be true if provided with a non-null <code>source</code>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>)
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: TOutput
  name: TOutput
  nameWithType: TOutput
  fullName: TOutput
- uid: System.Func{TInput,System.Collections.Generic.IEnumerable{TOutput}}
  parent: System
  isExternal: false
  name: Func<TInput,IEnumerable<TOutput>>
  nameWithType: Func<TInput,IEnumerable<TOutput>>
  fullName: System.Func<TInput,System.Collections.Generic.IEnumerable<TOutput>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInput
    name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Func{TInput,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{TOutput}}}
  parent: System
  isExternal: false
  name: Func<TInput,Task<IEnumerable<TOutput>>>
  nameWithType: Func<TInput,Task<IEnumerable<TOutput>>>
  fullName: System.Func<TInput,System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TOutput>>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInput
    name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,IEnumerable<TOutput>>, ExecutionDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ExecutionDataflowBlockOptions
  nameWithType: ExecutionDataflowBlockOptions
  fullName: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>(Func<TInput,Task<IEnumerable<TOutput>>>, ExecutionDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: Complete()
  nameWithType: TransformManyBlock<TInput,TOutput>.Complete()
  fullName: TransformManyBlock<TInput,TOutput>.Complete()
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: Completion
  nameWithType: TransformManyBlock<TInput,TOutput>.Completion
  fullName: TransformManyBlock<TInput,TOutput>.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: InputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.InputCount
  fullName: TransformManyBlock<TInput,TOutput>.InputCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  nameWithType: TransformManyBlock<TInput,TOutput>.LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  fullName: TransformManyBlock<TInput,TOutput>.LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
  name: ITargetBlock<TInput>
  nameWithType: ITargetBlock<TInput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TInput>
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<TOutput>
  nameWithType: ITargetBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowLinkOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowLinkOptions
  nameWithType: DataflowLinkOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowLinkOptions
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: OutputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.OutputCount
  fullName: TransformManyBlock<TInput,TOutput>.OutputCount
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ToString()
  nameWithType: TransformManyBlock<TInput,TOutput>.ToString()
  fullName: TransformManyBlock<TInput,TOutput>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TryReceive(Predicate<TOutput>, TOutput)
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  fullName: TransformManyBlock<TInput,TOutput>.TryReceive(Predicate<TOutput>, TOutput)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Predicate{TOutput}
  parent: System
  isExternal: false
  name: Predicate<TOutput>
  nameWithType: Predicate<TOutput>
  fullName: System.Predicate<TOutput>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TryReceiveAll(IList<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceiveAll(IList<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.TryReceiveAll(IList<TOutput>)
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.Generic.IList{TOutput}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<TOutput>
  nameWithType: IList<TOutput>
  fullName: System.Collections.Generic.IList<TOutput>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: IDataflowBlock.Fault(Exception)
  nameWithType: TransformManyBlock<TInput,TOutput>.IDataflowBlock.Fault(Exception)
  fullName: TransformManyBlock<TInput,TOutput>.IDataflowBlock.Fault(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, Boolean)
- uid: System.Threading.Tasks.Dataflow.DataflowMessageHeader
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowMessageHeader
  nameWithType: DataflowMessageHeader
  fullName: System.Threading.Tasks.Dataflow.DataflowMessageHeader
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  nameWithType: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: TransformManyBlock<TInput,TOutput>.ISourceBlock<TOutput>.ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
  nameWithType: TransformManyBlock<TInput,TOutput>.ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
  fullName: TransformManyBlock<TInput,TOutput>.ITargetBlock<TInput>.OfferMessage(DataflowMessageHeader, TInput, ISourceBlock<TInput>, Boolean)
- uid: System.Threading.Tasks.Dataflow.DataflowMessageStatus
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowMessageStatus
  nameWithType: DataflowMessageStatus
  fullName: System.Threading.Tasks.Dataflow.DataflowMessageStatus
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  name: ISourceBlock<TOutput>
  nameWithType: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{TInput}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<TInput>
  nameWithType: ISourceBlock<TInput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TInput>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInput
    name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TransformManyBlock<TInput,TOutput>
  nameWithType: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>
  fullName: TransformManyBlock<TInput,TOutput>.TransformManyBlock<TInput,TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: Complete
  nameWithType: TransformManyBlock<TInput,TOutput>.Complete
  fullName: TransformManyBlock<TInput,TOutput>.Complete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: Completion
  nameWithType: TransformManyBlock<TInput,TOutput>.Completion
  fullName: TransformManyBlock<TInput,TOutput>.Completion
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: InputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.InputCount
  fullName: TransformManyBlock<TInput,TOutput>.InputCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: LinkTo
  nameWithType: TransformManyBlock<TInput,TOutput>.LinkTo
  fullName: TransformManyBlock<TInput,TOutput>.LinkTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: OutputCount
  nameWithType: TransformManyBlock<TInput,TOutput>.OutputCount
  fullName: TransformManyBlock<TInput,TOutput>.OutputCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: ToString
  nameWithType: TransformManyBlock<TInput,TOutput>.ToString
  fullName: TransformManyBlock<TInput,TOutput>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TryReceive
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceive
  fullName: TransformManyBlock<TInput,TOutput>.TryReceive
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: TryReceiveAll
  nameWithType: TransformManyBlock<TInput,TOutput>.TryReceiveAll
  fullName: TransformManyBlock<TInput,TOutput>.TryReceiveAll
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  nameWithType: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  fullName: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ConsumeMessage
  nameWithType: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ConsumeMessage
  fullName: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ConsumeMessage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReleaseReservation
  nameWithType: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReleaseReservation
  fullName: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReleaseReservation
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReserveMessage
  nameWithType: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReserveMessage
  fullName: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReserveMessage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage*
  parent: System.Threading.Tasks.Dataflow.TransformManyBlock`2
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ITargetBlock<TInput>.OfferMessage
  nameWithType: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ITargetBlock<TInput>.OfferMessage
  fullName: TransformManyBlock<TInput,TOutput>.System.Threading.Tasks.Dataflow.ITargetBlock<TInput>.OfferMessage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/TransformManyBlock`2.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObserver<TInput>(ITargetBlock<TInput>)
  nameWithType: DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
  fullName: DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Post<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
  fullName: DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  fullName: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  fullName: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
- uid: System.Threading.Tasks.Dataflow.IPropagatorBlock`2
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: IPropagatorBlock<TInput,TOutput>
  nameWithType: IPropagatorBlock<TInput,TOutput>
  fullName: System.Threading.Tasks.Dataflow.IPropagatorBlock<TInput,TOutput>
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: IReceivableSourceBlock<TOutput>
  nameWithType: IReceivableSourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput>
