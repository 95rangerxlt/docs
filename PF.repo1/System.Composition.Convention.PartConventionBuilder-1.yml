### YamlMime:ManagedReference
items:
- uid: System.Composition.Convention.PartConventionBuilder`1
  commentId: T:System.Composition.Convention.PartConventionBuilder`1
  id: PartConventionBuilder`1
  children:
  - System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})
  - System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})
  langs:
  - csharp
  name: PartConventionBuilder<T>
  nameWithType: PartConventionBuilder<T>
  fullName: System.Composition.Convention.PartConventionBuilder<T>
  type: Class
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: 'public class PartConventionBuilder<T> : System.Composition.Convention.PartConventionBuilder'
    typeParameters:
    - id: T
      description: ''
  inheritance:
  - System.Object
  - System.Composition.Convention.PartConventionBuilder
  implements: []
  inheritedMembers:
  - System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  - System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  - System.Composition.Convention.PartConventionBuilder.Export
  - System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.Export``1
  - System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  - System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  - System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.Shared
  - System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ExportProperty(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertySelector);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ExportProperty*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertySelector, Action<System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    - id: exportConfiguration
      type: System.Action{System.Composition.Convention.ExportConventionBuilder}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ExportProperty*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ExportProperty<TContract>(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertySelector);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    typeParameters:
    - id: TContract
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertySelector, Action<System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    - id: exportConfiguration
      type: System.Action{System.Composition.Convention.ExportConventionBuilder}
      description: ''
    typeParameters:
    - id: TContract
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ImportProperty(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertySelector);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ImportProperty*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertySelector, Action<System.Composition.Convention.ImportConventionBuilder> importConfiguration);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    - id: importConfiguration
      type: System.Action{System.Composition.Convention.ImportConventionBuilder}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ImportProperty*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ImportProperty<TContract>(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertySelector);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    typeParameters:
    - id: TContract
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertySelector, Action<System.Composition.Convention.ImportConventionBuilder> importConfiguration);
    parameters:
    - id: propertySelector
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: ''
    - id: importConfiguration
      type: System.Action{System.Composition.Convention.ImportConventionBuilder}
      description: ''
    typeParameters:
    - id: TContract
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})
  id: NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: NotifyImportsSatisfied(Expression<Action<T>>)
  nameWithType: PartConventionBuilder<T>.NotifyImportsSatisfied(Expression<Action<T>>)
  fullName: PartConventionBuilder<T>.NotifyImportsSatisfied(Expression<Action<T>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> NotifyImportsSatisfied (System.Linq.Expressions.Expression<Action<T>> methodSelector);
    parameters:
    - id: methodSelector
      type: System.Linq.Expressions.Expression{System.Action{T}}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})
  commentId: M:System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})
  id: SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  langs:
  - csharp
  name: SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
  nameWithType: PartConventionBuilder<T>.SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
  fullName: PartConventionBuilder<T>.SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder<T> SelectConstructor (System.Linq.Expressions.Expression<Func<System.Composition.Convention.ParameterImportConventionBuilder,T>> constructorSelector);
    parameters:
    - id: constructorSelector
      type: System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,T}}
      description: ''
    return:
      type: System.Composition.Convention.PartConventionBuilder`1
      description: ''
  overload: System.Composition.Convention.PartConventionBuilder`1.SelectConstructor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
references:
- uid: System.Composition.Convention.PartConventionBuilder
  parent: System.Composition.Convention
  isExternal: false
  name: PartConventionBuilder
  nameWithType: PartConventionBuilder
  fullName: System.Composition.Convention.PartConventionBuilder
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>)
- uid: System.Composition.Convention.PartConventionBuilder`1
  parent: System.Composition.Convention
  isExternal: false
  name: PartConventionBuilder<T>
  nameWithType: PartConventionBuilder<T>
  fullName: System.Composition.Convention.PartConventionBuilder<T>
- uid: System.Linq.Expressions.Expression`1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Func<T,Object>>
  nameWithType: Expression<Func<T,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<T,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
- uid: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
- uid: System.Composition.Convention.ExportConventionBuilder
  name: ExportConventionBuilder
  nameWithType: ExportConventionBuilder
  fullName: System.Composition.Convention.ExportConventionBuilder
- uid: System.Action{System.Composition.Convention.ExportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<ExportConventionBuilder>
  nameWithType: Action<ExportConventionBuilder>
  fullName: System.Action<System.Composition.Convention.ExportConventionBuilder>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Composition.Convention.ExportConventionBuilder
    name: ExportConventionBuilder
    nameWithType: ExportConventionBuilder
    fullName: System.Composition.Convention.ExportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty<TContract>(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>)
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
- uid: System.Composition.Convention.ImportConventionBuilder
  name: ImportConventionBuilder
  nameWithType: ImportConventionBuilder
  fullName: System.Composition.Convention.ImportConventionBuilder
- uid: System.Action{System.Composition.Convention.ImportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<ImportConventionBuilder>
  nameWithType: Action<ImportConventionBuilder>
  fullName: System.Action<System.Composition.Convention.ImportConventionBuilder>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Composition.Convention.ImportConventionBuilder
    name: ImportConventionBuilder
    nameWithType: ImportConventionBuilder
    fullName: System.Composition.Convention.ImportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty<TContract>(Expression<Func<T,Object>>)
  nameWithType: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)
  fullName: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  nameWithType: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
  fullName: PartConventionBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: NotifyImportsSatisfied(Expression<Action<T>>)
  nameWithType: PartConventionBuilder<T>.NotifyImportsSatisfied(Expression<Action<T>>)
  fullName: PartConventionBuilder<T>.NotifyImportsSatisfied(Expression<Action<T>>)
- uid: System.Linq.Expressions.Expression{System.Action{T}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Action<T>>
  nameWithType: Expression<Action<T>>
  fullName: System.Linq.Expressions.Expression<System.Action<T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
  nameWithType: PartConventionBuilder<T>.SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
  fullName: PartConventionBuilder<T>.SelectConstructor(Expression<Func<ParameterImportConventionBuilder,T>>)
- uid: System.Composition.Convention.ParameterImportConventionBuilder
  name: ParameterImportConventionBuilder
  nameWithType: ParameterImportConventionBuilder
  fullName: System.Composition.Convention.ParameterImportConventionBuilder
- uid: System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,T}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Func<ParameterImportConventionBuilder,T>>
  nameWithType: Expression<Func<ParameterImportConventionBuilder,T>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Composition.Convention.ParameterImportConventionBuilder,T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Composition.Convention.ParameterImportConventionBuilder
    name: ParameterImportConventionBuilder
    nameWithType: ParameterImportConventionBuilder
    fullName: System.Composition.Convention.ParameterImportConventionBuilder
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty
  nameWithType: PartConventionBuilder<T>.ExportProperty
  fullName: PartConventionBuilder<T>.ExportProperty
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ExportProperty<TContract>
  nameWithType: PartConventionBuilder<T>.ExportProperty<TContract>
  fullName: PartConventionBuilder<T>.ExportProperty<TContract>
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty
  nameWithType: PartConventionBuilder<T>.ImportProperty
  fullName: PartConventionBuilder<T>.ImportProperty
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: ImportProperty<TContract>
  nameWithType: PartConventionBuilder<T>.ImportProperty<TContract>
  fullName: PartConventionBuilder<T>.ImportProperty<TContract>
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: NotifyImportsSatisfied
  nameWithType: PartConventionBuilder<T>.NotifyImportsSatisfied
  fullName: PartConventionBuilder<T>.NotifyImportsSatisfied
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Composition.Convention.PartConventionBuilder`1.SelectConstructor*
  parent: System.Composition.Convention.PartConventionBuilder`1
  isExternal: false
  name: SelectConstructor
  nameWithType: PartConventionBuilder<T>.SelectConstructor
  fullName: PartConventionBuilder<T>.SelectConstructor
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: AddPartMetadata(String, Func<Type,Object>)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
  fullName: PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: AddPartMetadata(String, Object)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Object)
  fullName: PartConventionBuilder.AddPartMetadata(String, Object)
- uid: System.Composition.Convention.PartConventionBuilder.Export
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export()
  nameWithType: PartConventionBuilder.Export()
  fullName: PartConventionBuilder.Export()
- uid: System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export(Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder.Export(Action<ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.Export``1
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export<T>()
  nameWithType: PartConventionBuilder.Export<T>()
  fullName: PartConventionBuilder.Export<T>()
- uid: System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export<T>(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
  fullName: PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces()
  nameWithType: PartConventionBuilder.ExportInterfaces()
  fullName: PartConventionBuilder.ExportInterfaces()
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>)
  fullName: PartConventionBuilder.ExportInterfaces(Predicate<Type>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  fullName: PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
  fullName: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
  fullName: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: NotifyImportsSatisfied(Predicate<MethodInfo>)
  nameWithType: PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
  fullName: PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  fullName: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  fullName: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.Shared
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Shared()
  nameWithType: PartConventionBuilder.Shared()
  fullName: PartConventionBuilder.Shared()
- uid: System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Shared(String)
  nameWithType: PartConventionBuilder.Shared(String)
  fullName: PartConventionBuilder.Shared(String)
