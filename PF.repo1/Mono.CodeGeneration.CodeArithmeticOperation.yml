### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeArithmeticOperation
  commentId: T:Mono.CodeGeneration.CodeArithmeticOperation
  id: CodeArithmeticOperation
  children:
  - Mono.CodeGeneration.CodeArithmeticOperation.#ctor
  - Mono.CodeGeneration.CodeArithmeticOperation.#ctor(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,System.String)
  - Mono.CodeGeneration.CodeArithmeticOperation.exp1
  - Mono.CodeGeneration.CodeArithmeticOperation.exp2
  - Mono.CodeGeneration.CodeArithmeticOperation.GetResultType
  - Mono.CodeGeneration.CodeArithmeticOperation.PrintCode(Mono.CodeGeneration.CodeWriter)
  - Mono.CodeGeneration.CodeArithmeticOperation.symbol
  - Mono.CodeGeneration.CodeArithmeticOperation.t1
  - Mono.CodeGeneration.CodeArithmeticOperation.t2
  langs:
  - csharp
  name: CodeArithmeticOperation
  nameWithType: CodeArithmeticOperation
  fullName: Mono.CodeGeneration.CodeArithmeticOperation
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: 'public abstract class CodeArithmeticOperation : Mono.CodeGeneration.CodeExpression'
  inheritance:
  - System.Object
  - Mono.CodeGeneration.CodeItem
  - Mono.CodeGeneration.CodeExpression
  derivedClasses:
  - Mono.CodeGeneration.CodeAdd
  - Mono.CodeGeneration.CodeDiv
  - Mono.CodeGeneration.CodeMul
  - Mono.CodeGeneration.CodeSub
  implements: []
  inheritedMembers:
  - Mono.CodeGeneration.CodeExpression.Add(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.And(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.AreEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.AreNotEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.ArrayLength
  - Mono.CodeGeneration.CodeExpression.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeExpression.Call(System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeExpression.CallToString
  - Mono.CodeGeneration.CodeExpression.CastTo(System.Type)
  - Mono.CodeGeneration.CodeExpression.Divide(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.GenerateAsStatement(System.Reflection.Emit.ILGenerator)
  - Mono.CodeGeneration.CodeExpression.Is(System.Type)
  - Mono.CodeGeneration.CodeExpression.IsGreaterEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsGreaterThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsNull
  - Mono.CodeGeneration.CodeExpression.IsNumber
  - Mono.CodeGeneration.CodeExpression.IsSmallerEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsSmallerThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Item(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Item(System.Reflection.FieldInfo)
  - Mono.CodeGeneration.CodeExpression.Item(System.Reflection.PropertyInfo)
  - Mono.CodeGeneration.CodeExpression.Item(System.String)
  - Mono.CodeGeneration.CodeExpression.MemGet(System.Reflection.MemberInfo)
  - Mono.CodeGeneration.CodeExpression.MemGet(System.String)
  - Mono.CodeGeneration.CodeExpression.Multiply(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Not(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.NullValue(System.Type)
  - Mono.CodeGeneration.CodeExpression.Subtract(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeItem.Generate(System.Reflection.Emit.ILGenerator)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.#ctor
  commentId: M:Mono.CodeGeneration.CodeArithmeticOperation.#ctor
  id: '#ctor'
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: CodeArithmeticOperation()
  nameWithType: CodeArithmeticOperation.CodeArithmeticOperation()
  fullName: CodeArithmeticOperation.CodeArithmeticOperation()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected CodeArithmeticOperation ();
    parameters: []
  overload: Mono.CodeGeneration.CodeArithmeticOperation.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.#ctor(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,System.String)
  commentId: M:Mono.CodeGeneration.CodeArithmeticOperation.#ctor(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,System.String)
  id: '#ctor(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,System.String)'
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: CodeArithmeticOperation(CodeExpression, CodeExpression, String)
  nameWithType: CodeArithmeticOperation.CodeArithmeticOperation(CodeExpression, CodeExpression, String)
  fullName: CodeArithmeticOperation.CodeArithmeticOperation(CodeExpression, CodeExpression, String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeArithmeticOperation (Mono.CodeGeneration.CodeExpression exp1, Mono.CodeGeneration.CodeExpression exp2, string symbol);
    parameters:
    - id: exp1
      type: Mono.CodeGeneration.CodeExpression
      description: ''
    - id: exp2
      type: Mono.CodeGeneration.CodeExpression
      description: ''
    - id: symbol
      type: System.String
      description: ''
  overload: Mono.CodeGeneration.CodeArithmeticOperation.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.exp1
  commentId: F:Mono.CodeGeneration.CodeArithmeticOperation.exp1
  id: exp1
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: exp1
  nameWithType: CodeArithmeticOperation.exp1
  fullName: CodeArithmeticOperation.exp1
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected Mono.CodeGeneration.CodeExpression exp1;
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: ''
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.exp2
  commentId: F:Mono.CodeGeneration.CodeArithmeticOperation.exp2
  id: exp2
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: exp2
  nameWithType: CodeArithmeticOperation.exp2
  fullName: CodeArithmeticOperation.exp2
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected Mono.CodeGeneration.CodeExpression exp2;
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: ''
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.GetResultType
  commentId: M:Mono.CodeGeneration.CodeArithmeticOperation.GetResultType
  id: GetResultType
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: GetResultType()
  nameWithType: CodeArithmeticOperation.GetResultType()
  fullName: CodeArithmeticOperation.GetResultType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override Type GetResultType ();
    parameters: []
    return:
      type: System.Type
      description: ''
  overload: Mono.CodeGeneration.CodeArithmeticOperation.GetResultType*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.PrintCode(Mono.CodeGeneration.CodeWriter)
  commentId: M:Mono.CodeGeneration.CodeArithmeticOperation.PrintCode(Mono.CodeGeneration.CodeWriter)
  id: PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: PrintCode(CodeWriter)
  nameWithType: CodeArithmeticOperation.PrintCode(CodeWriter)
  fullName: CodeArithmeticOperation.PrintCode(CodeWriter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override void PrintCode (Mono.CodeGeneration.CodeWriter cp);
    parameters:
    - id: cp
      type: Mono.CodeGeneration.CodeWriter
      description: ''
  overload: Mono.CodeGeneration.CodeArithmeticOperation.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.symbol
  commentId: F:Mono.CodeGeneration.CodeArithmeticOperation.symbol
  id: symbol
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: symbol
  nameWithType: CodeArithmeticOperation.symbol
  fullName: CodeArithmeticOperation.symbol
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected string symbol;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.t1
  commentId: F:Mono.CodeGeneration.CodeArithmeticOperation.t1
  id: t1
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: t1
  nameWithType: CodeArithmeticOperation.t1
  fullName: CodeArithmeticOperation.t1
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected Type t1;
    return:
      type: System.Type
      description: ''
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.t2
  commentId: F:Mono.CodeGeneration.CodeArithmeticOperation.t2
  id: t2
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  langs:
  - csharp
  name: t2
  nameWithType: CodeArithmeticOperation.t2
  fullName: CodeArithmeticOperation.t2
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: protected Type t2;
    return:
      type: System.Type
      description: ''
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
references:
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.CodeArithmeticOperation.#ctor
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: CodeArithmeticOperation()
  nameWithType: CodeArithmeticOperation.CodeArithmeticOperation()
  fullName: CodeArithmeticOperation.CodeArithmeticOperation()
- uid: Mono.CodeGeneration.CodeArithmeticOperation.#ctor(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,System.String)
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: CodeArithmeticOperation(CodeExpression, CodeExpression, String)
  nameWithType: CodeArithmeticOperation.CodeArithmeticOperation(CodeExpression, CodeExpression, String)
  fullName: CodeArithmeticOperation.CodeArithmeticOperation(CodeExpression, CodeExpression, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.CodeArithmeticOperation.exp1
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: exp1
  nameWithType: CodeArithmeticOperation.exp1
  fullName: CodeArithmeticOperation.exp1
- uid: Mono.CodeGeneration.CodeArithmeticOperation.exp2
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: exp2
  nameWithType: CodeArithmeticOperation.exp2
  fullName: CodeArithmeticOperation.exp2
- uid: Mono.CodeGeneration.CodeArithmeticOperation.GetResultType
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: GetResultType()
  nameWithType: CodeArithmeticOperation.GetResultType()
  fullName: CodeArithmeticOperation.GetResultType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mono.CodeGeneration.CodeArithmeticOperation.PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: PrintCode(CodeWriter)
  nameWithType: CodeArithmeticOperation.PrintCode(CodeWriter)
  fullName: CodeArithmeticOperation.PrintCode(CodeWriter)
- uid: Mono.CodeGeneration.CodeWriter
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Mono.CodeGeneration.CodeWriter
- uid: Mono.CodeGeneration.CodeArithmeticOperation.symbol
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: symbol
  nameWithType: CodeArithmeticOperation.symbol
  fullName: CodeArithmeticOperation.symbol
- uid: Mono.CodeGeneration.CodeArithmeticOperation.t1
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: t1
  nameWithType: CodeArithmeticOperation.t1
  fullName: CodeArithmeticOperation.t1
- uid: Mono.CodeGeneration.CodeArithmeticOperation.t2
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: t2
  nameWithType: CodeArithmeticOperation.t2
  fullName: CodeArithmeticOperation.t2
- uid: Mono.CodeGeneration.CodeArithmeticOperation.#ctor*
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: CodeArithmeticOperation
  nameWithType: CodeArithmeticOperation.CodeArithmeticOperation
  fullName: CodeArithmeticOperation.CodeArithmeticOperation
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.GetResultType*
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: GetResultType
  nameWithType: CodeArithmeticOperation.GetResultType
  fullName: CodeArithmeticOperation.GetResultType
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: Mono.CodeGeneration.CodeArithmeticOperation.PrintCode*
  parent: Mono.CodeGeneration.CodeArithmeticOperation
  isExternal: false
  name: PrintCode
  nameWithType: CodeArithmeticOperation.PrintCode
  fullName: CodeArithmeticOperation.PrintCode
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeArithmeticOperation.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: Mono.CodeGeneration.CodeItem.Generate(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeItem
  isExternal: false
  name: Generate(ILGenerator)
  nameWithType: CodeItem.Generate(ILGenerator)
  fullName: CodeItem.Generate(ILGenerator)
- uid: Mono.CodeGeneration.CodeExpression.Add(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Add(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.Add(CodeExpression, CodeExpression)
  fullName: CodeExpression.Add(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.And(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: And(CodeExpression)
  nameWithType: CodeExpression.And(CodeExpression)
  fullName: CodeExpression.And(CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.AreEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: AreEqual(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.AreEqual(CodeExpression, CodeExpression)
  fullName: CodeExpression.AreEqual(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.AreNotEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: AreNotEqual(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.AreNotEqual(CodeExpression, CodeExpression)
  fullName: CodeExpression.AreNotEqual(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.ArrayLength
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: ArrayLength
  nameWithType: CodeExpression.ArrayLength
  fullName: CodeExpression.ArrayLength
- uid: Mono.CodeGeneration.CodeExpression.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Call(MethodInfo, CodeExpression[])
  nameWithType: CodeExpression.Call(MethodInfo, CodeExpression[])
  fullName: CodeExpression.Call(MethodInfo, CodeExpression[])
- uid: Mono.CodeGeneration.CodeExpression.Call(System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Call(String, CodeExpression[])
  nameWithType: CodeExpression.Call(String, CodeExpression[])
  fullName: CodeExpression.Call(String, CodeExpression[])
- uid: Mono.CodeGeneration.CodeExpression.CallToString
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: CallToString()
  nameWithType: CodeExpression.CallToString()
  fullName: CodeExpression.CallToString()
- uid: Mono.CodeGeneration.CodeExpression.CastTo(System.Type)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: CastTo(Type)
  nameWithType: CodeExpression.CastTo(Type)
  fullName: CodeExpression.CastTo(Type)
- uid: Mono.CodeGeneration.CodeExpression.Divide(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Divide(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.Divide(CodeExpression, CodeExpression)
  fullName: CodeExpression.Divide(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.GenerateAsStatement(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: GenerateAsStatement(ILGenerator)
  nameWithType: CodeExpression.GenerateAsStatement(ILGenerator)
  fullName: CodeExpression.GenerateAsStatement(ILGenerator)
- uid: Mono.CodeGeneration.CodeExpression.Is(System.Type)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Is(Type)
  nameWithType: CodeExpression.Is(Type)
  fullName: CodeExpression.Is(Type)
- uid: Mono.CodeGeneration.CodeExpression.IsGreaterEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsGreaterEqualThan(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.IsGreaterEqualThan(CodeExpression, CodeExpression)
  fullName: CodeExpression.IsGreaterEqualThan(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.IsGreaterThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsGreaterThan(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.IsGreaterThan(CodeExpression, CodeExpression)
  fullName: CodeExpression.IsGreaterThan(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.IsNull
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsNull
  nameWithType: CodeExpression.IsNull
  fullName: CodeExpression.IsNull
- uid: Mono.CodeGeneration.CodeExpression.IsNumber
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsNumber
  nameWithType: CodeExpression.IsNumber
  fullName: CodeExpression.IsNumber
- uid: Mono.CodeGeneration.CodeExpression.IsSmallerEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsSmallerEqualThan(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.IsSmallerEqualThan(CodeExpression, CodeExpression)
  fullName: CodeExpression.IsSmallerEqualThan(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.IsSmallerThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: IsSmallerThan(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.IsSmallerThan(CodeExpression, CodeExpression)
  fullName: CodeExpression.IsSmallerThan(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.Item(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Item(CodeExpression)
  nameWithType: CodeExpression.Item(CodeExpression)
  fullName: CodeExpression.Item(CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.Item(System.Reflection.FieldInfo)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Item(FieldInfo)
  nameWithType: CodeExpression.Item(FieldInfo)
  fullName: CodeExpression.Item(FieldInfo)
- uid: Mono.CodeGeneration.CodeExpression.Item(System.Reflection.PropertyInfo)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Item(PropertyInfo)
  nameWithType: CodeExpression.Item(PropertyInfo)
  fullName: CodeExpression.Item(PropertyInfo)
- uid: Mono.CodeGeneration.CodeExpression.Item(System.String)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Item(String)
  nameWithType: CodeExpression.Item(String)
  fullName: CodeExpression.Item(String)
- uid: Mono.CodeGeneration.CodeExpression.MemGet(System.Reflection.MemberInfo)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: MemGet(MemberInfo)
  nameWithType: CodeExpression.MemGet(MemberInfo)
  fullName: CodeExpression.MemGet(MemberInfo)
- uid: Mono.CodeGeneration.CodeExpression.MemGet(System.String)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: MemGet(String)
  nameWithType: CodeExpression.MemGet(String)
  fullName: CodeExpression.MemGet(String)
- uid: Mono.CodeGeneration.CodeExpression.Multiply(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Multiply(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.Multiply(CodeExpression, CodeExpression)
  fullName: CodeExpression.Multiply(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.Not(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Not(CodeExpression)
  nameWithType: CodeExpression.Not(CodeExpression)
  fullName: CodeExpression.Not(CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression.NullValue(System.Type)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: NullValue(Type)
  nameWithType: CodeExpression.NullValue(Type)
  fullName: CodeExpression.NullValue(Type)
- uid: Mono.CodeGeneration.CodeExpression.Subtract(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeExpression
  isExternal: false
  name: Subtract(CodeExpression, CodeExpression)
  nameWithType: CodeExpression.Subtract(CodeExpression, CodeExpression)
  fullName: CodeExpression.Subtract(CodeExpression, CodeExpression)
